<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ output extension=".gen.cs" #>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Unity.Burst;
using static CareBoo.Burst.Delegates.SafetyChecks;

namespace CareBoo.Burst.Delegates
{
<#
var GENERIC_PARAMS = new[]
{
    "",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z"
};

for (var i = 0; i < GENERIC_PARAMS.Length; i++)
{
    var GENERIC_DEF = "";
    var GENERIC_CONSTRAINTS = "";
    for (var j = 1; j <= i; j++)
    {
        GENERIC_DEF += $"{GENERIC_PARAMS[j]}, ";
        GENERIC_CONSTRAINTS += $"where {GENERIC_PARAMS[j]} : struct\n        ";
    }

    GENERIC_DEF = $"<{GENERIC_DEF}TResult>";
    GENERIC_CONSTRAINTS += "where TResult : struct";
    var GENERIC_ARGS_TYPED = string.Join(", ", GENERIC_PARAMS.Skip(1).Take(i).Select((t, n) => $"{t} arg{n}"));
    var GENERIC_ARGS = string.Join(", ", GENERIC_PARAMS.Skip(1).Take(i).Select((t, n) => $"arg{n}"));

#>
    public struct BurstFunc<#=GENERIC_DEF#>
        : IFunc<#=GENERIC_DEF#>
        <#=GENERIC_CONSTRAINTS#>
    {
        readonly FunctionPointer<Func<#=GENERIC_DEF#>> functionPointer;

        public BurstFunc(FunctionPointer<Func<#=GENERIC_DEF#>> functionPointer)
        {
            this.functionPointer = functionPointer;
        }

        public TResult Invoke(<#=GENERIC_ARGS_TYPED#>)
        {
            SupportedInBurstOnly();
            return functionPointer.Invoke(<#=GENERIC_ARGS#>);
        }

        public static BurstFunc<#=GENERIC_DEF#> Compile(Func<#=GENERIC_DEF#> func)
        {
            var functionPointer = BurstCompiler.CompileFunctionPointer(func);
            return new BurstFunc<#=GENERIC_DEF#>(functionPointer);
        }

        public static implicit operator ValueFunc<#=GENERIC_DEF#>.Struct<BurstFunc<#=GENERIC_DEF#>>(BurstFunc<#=GENERIC_DEF#> burstFunc)
        {
            return ValueFunc<#=GENERIC_DEF#>.New(burstFunc);
        }

        public static implicit operator BurstFunc<#=GENERIC_DEF#>(ValueFunc<#=GENERIC_DEF#>.Struct<BurstFunc<#=GENERIC_DEF#>> valueFunc)
        {
            return valueFunc.lambda;
        }
    }

<#
}
#>
}