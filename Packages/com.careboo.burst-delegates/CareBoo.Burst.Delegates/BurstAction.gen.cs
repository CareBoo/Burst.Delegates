


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Unity.Burst;
using System;

namespace CareBoo.Burst.Delegates
{

    public unsafe struct BurstAction //: IAction
        
    {
        //delegate*<void> _ptr;

        //BurstAction(delegate*<void> ptr) => _ptr = ptr;

        //public void Invoke() => _ptr();

        //public static BurstAction Compile(Action action)
        //{
         //   var ptr = BurstCompiler.CompileFunctionPointer(action).Value;
        //    return new BurstAction((delegate*<void>)ptr);
        //}
    }

    public unsafe struct BurstAction<T> //: IAction<T>
        
        where T : struct
    {
        //delegate*<T, void> _ptr;

        //BurstAction(delegate*<T, void> ptr) => _ptr = ptr;

        //public void Invoke(T arg0) => _ptr(arg0);

        //public static BurstAction<T> Compile(Action<T> action)
        //{
         //   var ptr = BurstCompiler.CompileFunctionPointer(action).Value;
        //    return new BurstAction<T>((delegate*<T, void>)ptr);
        //}
    }

    public unsafe struct BurstAction<T, U> //: IAction<T, U>
        
        where T : struct
        where U : struct
    {
        //delegate*<T, U, void> _ptr;

        //BurstAction(delegate*<T, U, void> ptr) => _ptr = ptr;

        //public void Invoke(T arg0, U arg1) => _ptr(arg0, arg1);

        //public static BurstAction<T, U> Compile(Action<T, U> action)
        //{
         //   var ptr = BurstCompiler.CompileFunctionPointer(action).Value;
        //    return new BurstAction<T, U>((delegate*<T, U, void>)ptr);
        //}
    }

    public unsafe struct BurstAction<T, U, V> //: IAction<T, U, V>
        
        where T : struct
        where U : struct
        where V : struct
    {
        //delegate*<T, U, V, void> _ptr;

        //BurstAction(delegate*<T, U, V, void> ptr) => _ptr = ptr;

        //public void Invoke(T arg0, U arg1, V arg2) => _ptr(arg0, arg1, arg2);

        //public static BurstAction<T, U, V> Compile(Action<T, U, V> action)
        //{
         //   var ptr = BurstCompiler.CompileFunctionPointer(action).Value;
        //    return new BurstAction<T, U, V>((delegate*<T, U, V, void>)ptr);
        //}
    }

    public unsafe struct BurstAction<T, U, V, W> //: IAction<T, U, V, W>
        
        where T : struct
        where U : struct
        where V : struct
        where W : struct
    {
        //delegate*<T, U, V, W, void> _ptr;

        //BurstAction(delegate*<T, U, V, W, void> ptr) => _ptr = ptr;

        //public void Invoke(T arg0, U arg1, V arg2, W arg3) => _ptr(arg0, arg1, arg2, arg3);

        //public static BurstAction<T, U, V, W> Compile(Action<T, U, V, W> action)
        //{
         //   var ptr = BurstCompiler.CompileFunctionPointer(action).Value;
        //    return new BurstAction<T, U, V, W>((delegate*<T, U, V, W, void>)ptr);
        //}
    }

    public unsafe struct BurstAction<T, U, V, W, X> //: IAction<T, U, V, W, X>
        
        where T : struct
        where U : struct
        where V : struct
        where W : struct
        where X : struct
    {
        //delegate*<T, U, V, W, X, void> _ptr;

        //BurstAction(delegate*<T, U, V, W, X, void> ptr) => _ptr = ptr;

        //public void Invoke(T arg0, U arg1, V arg2, W arg3, X arg4) => _ptr(arg0, arg1, arg2, arg3, arg4);

        //public static BurstAction<T, U, V, W, X> Compile(Action<T, U, V, W, X> action)
        //{
         //   var ptr = BurstCompiler.CompileFunctionPointer(action).Value;
        //    return new BurstAction<T, U, V, W, X>((delegate*<T, U, V, W, X, void>)ptr);
        //}
    }

    public unsafe struct BurstAction<T, U, V, W, X, Y> //: IAction<T, U, V, W, X, Y>
        
        where T : struct
        where U : struct
        where V : struct
        where W : struct
        where X : struct
        where Y : struct
    {
        //delegate*<T, U, V, W, X, Y, void> _ptr;

        //BurstAction(delegate*<T, U, V, W, X, Y, void> ptr) => _ptr = ptr;

        //public void Invoke(T arg0, U arg1, V arg2, W arg3, X arg4, Y arg5) => _ptr(arg0, arg1, arg2, arg3, arg4, arg5);

        //public static BurstAction<T, U, V, W, X, Y> Compile(Action<T, U, V, W, X, Y> action)
        //{
         //   var ptr = BurstCompiler.CompileFunctionPointer(action).Value;
        //    return new BurstAction<T, U, V, W, X, Y>((delegate*<T, U, V, W, X, Y, void>)ptr);
        //}
    }

    public unsafe struct BurstAction<T, U, V, W, X, Y, Z> //: IAction<T, U, V, W, X, Y, Z>
        
        where T : struct
        where U : struct
        where V : struct
        where W : struct
        where X : struct
        where Y : struct
        where Z : struct
    {
        //delegate*<T, U, V, W, X, Y, Z, void> _ptr;

        //BurstAction(delegate*<T, U, V, W, X, Y, Z, void> ptr) => _ptr = ptr;

        //public void Invoke(T arg0, U arg1, V arg2, W arg3, X arg4, Y arg5, Z arg6) => _ptr(arg0, arg1, arg2, arg3, arg4, arg5, arg6);

        //public static BurstAction<T, U, V, W, X, Y, Z> Compile(Action<T, U, V, W, X, Y, Z> action)
        //{
         //   var ptr = BurstCompiler.CompileFunctionPointer(action).Value;
        //    return new BurstAction<T, U, V, W, X, Y, Z>((delegate*<T, U, V, W, X, Y, Z, void>)ptr);
        //}
    }

}