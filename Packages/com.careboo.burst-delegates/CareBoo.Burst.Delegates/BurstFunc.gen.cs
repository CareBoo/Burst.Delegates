


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Unity.Collections.LowLevel.Unsafe;
using Unity.Burst;
using System;

namespace CareBoo.Burst.Delegates
{

    public unsafe struct BurstFunc<TResult> //: IFunc<TResult>
        where TResult : struct
    {
#if !UNITY_DOTSPLAYER
        [NativeDisableUnsafePtrRestriction]
#endif
        readonly IntPtr _ptr;

        public BurstFunc(delegate*<TResult> ptr) => _ptr = (IntPtr)ptr;

        BurstFunc(IntPtr ptr) => _ptr = ptr;

        public TResult Invoke() => ((delegate*<TResult>)_ptr)();

        public static BurstFunc<TResult> Compile(Func<TResult> func)
        {
            var ptr = BurstCompiler.CompileFunctionPointer(func).Value;
            return new BurstFunc<TResult>(ptr);
        }

        public static implicit operator BurstFunc<TResult>(delegate*<TResult> ptr)
        {
            return new BurstFunc<TResult>(ptr);
        }

        public static implicit operator delegate*<TResult>(BurstFunc<TResult> burstFunc)
        {
            return (delegate*<TResult>)burstFunc._ptr;
        }
    }

    public unsafe struct BurstFunc<T, TResult> //: IFunc<T, TResult>
        where T : struct
        where TResult : struct
    {
#if !UNITY_DOTSPLAYER
        [NativeDisableUnsafePtrRestriction]
#endif
        readonly IntPtr _ptr;

        public BurstFunc(delegate*<T, TResult> ptr) => _ptr = (IntPtr)ptr;

        BurstFunc(IntPtr ptr) => _ptr = ptr;

        public TResult Invoke(T arg0) => ((delegate*<T, TResult>)_ptr)(arg0);

        public static BurstFunc<T, TResult> Compile(Func<T, TResult> func)
        {
            var ptr = BurstCompiler.CompileFunctionPointer(func).Value;
            return new BurstFunc<T, TResult>(ptr);
        }

        public static implicit operator BurstFunc<T, TResult>(delegate*<T, TResult> ptr)
        {
            return new BurstFunc<T, TResult>(ptr);
        }

        public static implicit operator delegate*<T, TResult>(BurstFunc<T, TResult> burstFunc)
        {
            return (delegate*<T, TResult>)burstFunc._ptr;
        }
    }

    public unsafe struct BurstFunc<T, U, TResult> //: IFunc<T, U, TResult>
        where T : struct
        where U : struct
        where TResult : struct
    {
#if !UNITY_DOTSPLAYER
        [NativeDisableUnsafePtrRestriction]
#endif
        readonly IntPtr _ptr;

        public BurstFunc(delegate*<T, U, TResult> ptr) => _ptr = (IntPtr)ptr;

        BurstFunc(IntPtr ptr) => _ptr = ptr;

        public TResult Invoke(T arg0, U arg1) => ((delegate*<T, U, TResult>)_ptr)(arg0, arg1);

        public static BurstFunc<T, U, TResult> Compile(Func<T, U, TResult> func)
        {
            var ptr = BurstCompiler.CompileFunctionPointer(func).Value;
            return new BurstFunc<T, U, TResult>(ptr);
        }

        public static implicit operator BurstFunc<T, U, TResult>(delegate*<T, U, TResult> ptr)
        {
            return new BurstFunc<T, U, TResult>(ptr);
        }

        public static implicit operator delegate*<T, U, TResult>(BurstFunc<T, U, TResult> burstFunc)
        {
            return (delegate*<T, U, TResult>)burstFunc._ptr;
        }
    }

    public unsafe struct BurstFunc<T, U, V, TResult> //: IFunc<T, U, V, TResult>
        where T : struct
        where U : struct
        where V : struct
        where TResult : struct
    {
#if !UNITY_DOTSPLAYER
        [NativeDisableUnsafePtrRestriction]
#endif
        readonly IntPtr _ptr;

        public BurstFunc(delegate*<T, U, V, TResult> ptr) => _ptr = (IntPtr)ptr;

        BurstFunc(IntPtr ptr) => _ptr = ptr;

        public TResult Invoke(T arg0, U arg1, V arg2) => ((delegate*<T, U, V, TResult>)_ptr)(arg0, arg1, arg2);

        public static BurstFunc<T, U, V, TResult> Compile(Func<T, U, V, TResult> func)
        {
            var ptr = BurstCompiler.CompileFunctionPointer(func).Value;
            return new BurstFunc<T, U, V, TResult>(ptr);
        }

        public static implicit operator BurstFunc<T, U, V, TResult>(delegate*<T, U, V, TResult> ptr)
        {
            return new BurstFunc<T, U, V, TResult>(ptr);
        }

        public static implicit operator delegate*<T, U, V, TResult>(BurstFunc<T, U, V, TResult> burstFunc)
        {
            return (delegate*<T, U, V, TResult>)burstFunc._ptr;
        }
    }

    public unsafe struct BurstFunc<T, U, V, W, TResult> //: IFunc<T, U, V, W, TResult>
        where T : struct
        where U : struct
        where V : struct
        where W : struct
        where TResult : struct
    {
#if !UNITY_DOTSPLAYER
        [NativeDisableUnsafePtrRestriction]
#endif
        readonly IntPtr _ptr;

        public BurstFunc(delegate*<T, U, V, W, TResult> ptr) => _ptr = (IntPtr)ptr;

        BurstFunc(IntPtr ptr) => _ptr = ptr;

        public TResult Invoke(T arg0, U arg1, V arg2, W arg3) => ((delegate*<T, U, V, W, TResult>)_ptr)(arg0, arg1, arg2, arg3);

        public static BurstFunc<T, U, V, W, TResult> Compile(Func<T, U, V, W, TResult> func)
        {
            var ptr = BurstCompiler.CompileFunctionPointer(func).Value;
            return new BurstFunc<T, U, V, W, TResult>(ptr);
        }

        public static implicit operator BurstFunc<T, U, V, W, TResult>(delegate*<T, U, V, W, TResult> ptr)
        {
            return new BurstFunc<T, U, V, W, TResult>(ptr);
        }

        public static implicit operator delegate*<T, U, V, W, TResult>(BurstFunc<T, U, V, W, TResult> burstFunc)
        {
            return (delegate*<T, U, V, W, TResult>)burstFunc._ptr;
        }
    }

    public unsafe struct BurstFunc<T, U, V, W, X, TResult> //: IFunc<T, U, V, W, X, TResult>
        where T : struct
        where U : struct
        where V : struct
        where W : struct
        where X : struct
        where TResult : struct
    {
#if !UNITY_DOTSPLAYER
        [NativeDisableUnsafePtrRestriction]
#endif
        readonly IntPtr _ptr;

        public BurstFunc(delegate*<T, U, V, W, X, TResult> ptr) => _ptr = (IntPtr)ptr;

        BurstFunc(IntPtr ptr) => _ptr = ptr;

        public TResult Invoke(T arg0, U arg1, V arg2, W arg3, X arg4) => ((delegate*<T, U, V, W, X, TResult>)_ptr)(arg0, arg1, arg2, arg3, arg4);

        public static BurstFunc<T, U, V, W, X, TResult> Compile(Func<T, U, V, W, X, TResult> func)
        {
            var ptr = BurstCompiler.CompileFunctionPointer(func).Value;
            return new BurstFunc<T, U, V, W, X, TResult>(ptr);
        }

        public static implicit operator BurstFunc<T, U, V, W, X, TResult>(delegate*<T, U, V, W, X, TResult> ptr)
        {
            return new BurstFunc<T, U, V, W, X, TResult>(ptr);
        }

        public static implicit operator delegate*<T, U, V, W, X, TResult>(BurstFunc<T, U, V, W, X, TResult> burstFunc)
        {
            return (delegate*<T, U, V, W, X, TResult>)burstFunc._ptr;
        }
    }

    public unsafe struct BurstFunc<T, U, V, W, X, Y, TResult> //: IFunc<T, U, V, W, X, Y, TResult>
        where T : struct
        where U : struct
        where V : struct
        where W : struct
        where X : struct
        where Y : struct
        where TResult : struct
    {
#if !UNITY_DOTSPLAYER
        [NativeDisableUnsafePtrRestriction]
#endif
        readonly IntPtr _ptr;

        public BurstFunc(delegate*<T, U, V, W, X, Y, TResult> ptr) => _ptr = (IntPtr)ptr;

        BurstFunc(IntPtr ptr) => _ptr = ptr;

        public TResult Invoke(T arg0, U arg1, V arg2, W arg3, X arg4, Y arg5) => ((delegate*<T, U, V, W, X, Y, TResult>)_ptr)(arg0, arg1, arg2, arg3, arg4, arg5);

        public static BurstFunc<T, U, V, W, X, Y, TResult> Compile(Func<T, U, V, W, X, Y, TResult> func)
        {
            var ptr = BurstCompiler.CompileFunctionPointer(func).Value;
            return new BurstFunc<T, U, V, W, X, Y, TResult>(ptr);
        }

        public static implicit operator BurstFunc<T, U, V, W, X, Y, TResult>(delegate*<T, U, V, W, X, Y, TResult> ptr)
        {
            return new BurstFunc<T, U, V, W, X, Y, TResult>(ptr);
        }

        public static implicit operator delegate*<T, U, V, W, X, Y, TResult>(BurstFunc<T, U, V, W, X, Y, TResult> burstFunc)
        {
            return (delegate*<T, U, V, W, X, Y, TResult>)burstFunc._ptr;
        }
    }

    public unsafe struct BurstFunc<T, U, V, W, X, Y, Z, TResult> //: IFunc<T, U, V, W, X, Y, Z, TResult>
        where T : struct
        where U : struct
        where V : struct
        where W : struct
        where X : struct
        where Y : struct
        where Z : struct
        where TResult : struct
    {
#if !UNITY_DOTSPLAYER
        [NativeDisableUnsafePtrRestriction]
#endif
        readonly IntPtr _ptr;

        public BurstFunc(delegate*<T, U, V, W, X, Y, Z, TResult> ptr) => _ptr = (IntPtr)ptr;

        BurstFunc(IntPtr ptr) => _ptr = ptr;

        public TResult Invoke(T arg0, U arg1, V arg2, W arg3, X arg4, Y arg5, Z arg6) => ((delegate*<T, U, V, W, X, Y, Z, TResult>)_ptr)(arg0, arg1, arg2, arg3, arg4, arg5, arg6);

        public static BurstFunc<T, U, V, W, X, Y, Z, TResult> Compile(Func<T, U, V, W, X, Y, Z, TResult> func)
        {
            var ptr = BurstCompiler.CompileFunctionPointer(func).Value;
            return new BurstFunc<T, U, V, W, X, Y, Z, TResult>(ptr);
        }

        public static implicit operator BurstFunc<T, U, V, W, X, Y, Z, TResult>(delegate*<T, U, V, W, X, Y, Z, TResult> ptr)
        {
            return new BurstFunc<T, U, V, W, X, Y, Z, TResult>(ptr);
        }

        public static implicit operator delegate*<T, U, V, W, X, Y, Z, TResult>(BurstFunc<T, U, V, W, X, Y, Z, TResult> burstFunc)
        {
            return (delegate*<T, U, V, W, X, Y, Z, TResult>)burstFunc._ptr;
        }
    }

}